AWSTemplateFormatVersion: 2010-09-09
Description: Reference Architecture to host Moodle on AWS - Creates RDS Aurora database cluster
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Database Parameters
      Parameters:
        - DatabaseEngine
        - DatabaseInstanceType
        - DatabasePort
        # - DatabaseMasterUsername
        # - DatabaseMasterPassword
        - DatabaseName
        - DatabaseEncrpytedBoolean
        - DatabaseCmk
        - DatabaseSecurityGroup
        - NumberOfSubnets
        - Subnet
    ParameterLabels:
      DatabaseEncrpytedBoolean:
        default: Encrypted DB Cluster
      DatabaseCmk:
        default: AWS KMS Customer Master Key (CMK) to encrypt DB
      DatabaseEngine:
        default: Auroa DB Engine
      DatabaseInstanceType:
        default: DB Instance Class 
      DatabasePort:
        default: DB port
      # DatabaseMasterUsername:
      #   default: DB Master Username
      # DatabaseMasterPassword:
      #   default: DB Master Password
      DatabaseName:
        default: DB Name
      DatabaseSecurityGroup:
        default: DB Security Group
      NumberOfSubnets:
        default: Number of subnets
      Subnet:
        default: Subnets

Parameters:

  DatabaseEncrpytedBoolean:
    AllowedValues:
      - true
      - false
    Default: True
    Description: Indicates whether the DB instances in the cluster are encrypted.
    Type: String
  DatabaseCmk:
    Description: AWS KMS Customer Master Key (CMK) to encrypt database cluster
    Type: String
  DatabaseEngine:
    AllowedValues:
      - aurora-postgresql
      - aurora-mysql
    ConstraintDescription: Must be a valid RDS Aurora db engine.
    Default: aurora-postgresql
    Description: The Amazon RDS database engine.
    Type: String
  DatabaseInstanceType:
    AllowedValues:
      - db.r6i.large
      - db.r6i.xlarge
      - db.r6i.2xlarge
      - db.r6i.4xlarge
      - db.r6i.8xlarge
      - db.r6i.12xlarge
      - db.r6i.16xlarge
      - db.r6i.24xlarge
    ConstraintDescription: Must be a valid RDS instance class.
    Default: db.r6i.large
    Description: The Amazon RDS database instance class.
    Type: String
  DatabasePort:
    ConstraintDescription: Must be a valid RDS instance port.
    Description: The Amazon RDS database port.
    Type: String
  # DatabaseMasterUsername:
  #   AllowedPattern: ^([a-zA-Z0-9]*)$
  #   Description: The Amazon RDS master username.
  #   ConstraintDescription: Must contain only alphanumeric characters and be at least 8 characters.
  #   MaxLength: 16
  #   MinLength: 1
  #   Type: String
  # DatabaseMasterPassword:
  #   AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
  #   ConstraintDescription: Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-    
  #   Description: The Amazon RDS master password.
  #   MaxLength: 41
  #   MinLength: 8
  #   NoEcho: true
  #   Type: String
  MyRDSInstanceSecretArn:
    Type: String
  DatabaseName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master database name.
    Type: String
  DatabaseSecurityGroup:
    Description: Select the database security group.
    Type: AWS::EC2::SecurityGroup::Id
  NumberOfSubnets:
    AllowedValues:
    - 2
    - 3
    - 4
    - 5
    - 6
    Default: 2
    Description: Number of subnets. This must match your selections in the list of subnets below.
    Type: String 
  Subnet:
    Description: Select existing subnets. The number selected must match the number of subnets above. Subnets selected must be in separate AZs.
    Type: List<AWS::EC2::Subnet::Id>

Conditions:

  NumberOfSubnets1:
      !Equals [ 1, !Ref NumberOfSubnets ]
  NumberOfSubnets2:
      !Equals [ 2, !Ref NumberOfSubnets ]
  NumberOfSubnets3:
      !Equals [ 3, !Ref NumberOfSubnets ]
  NumberOfSubnets4:
      !Equals [ 4, !Ref NumberOfSubnets ]
  NumberOfSubnets5:
      !Equals [ 5, !Ref NumberOfSubnets ]
  NumberOfSubnets6:
      !Equals [ 6, !Ref NumberOfSubnets ]
  Subnet0: !Or
    - !Condition NumberOfSubnets1
    - !Condition NumberOfSubnets2
    - !Condition NumberOfSubnets3
    - !Condition NumberOfSubnets4
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet1: !Or
    - !Condition NumberOfSubnets2
    - !Condition NumberOfSubnets3
    - !Condition NumberOfSubnets4
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet2: !Or
    - !Condition NumberOfSubnets3
    - !Condition NumberOfSubnets4
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet3: !Or
    - !Condition NumberOfSubnets4
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet4: !Or
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet5: !Condition NumberOfSubnets6
  UseAWS-ManagedCMK:
    !Equals ['', !Ref DatabaseCmk]
  DBClusterParameterSelect:
    !Equals [ 'aurora-postgresql', !Ref DatabaseEngine ]
Resources:
  DatabaseCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      BackupRetentionPeriod: 30
      DatabaseName: !Ref DatabaseName
      DBSubnetGroupName: !Ref DataSubnetGroup
      EngineVersion: 8.0.mysql_aurora.3.05.2
      Engine: !Ref DatabaseEngine
      DBClusterParameterGroupName:
        !If  [ DBClusterParameterSelect, 'default.aurora-postgresql11', 'custom-mysql-aurora3-cluster']
      KmsKeyId:
        !If [ UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref DatabaseCmk ]
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref MyRDSInstanceSecretArn, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref MyRDSInstanceSecretArn, ':SecretString:password}}' ]]
      Port: !Ref  DatabasePort
      StorageEncrypted: !Ref DatabaseEncrpytedBoolean
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Moodle / ', !Ref 'AWS::StackName' ] ]
      VpcSecurityGroupIds:
      - !Ref DatabaseSecurityGroup
  DatabaseInstance0:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      DBClusterIdentifier: !Ref DatabaseCluster
      DBInstanceClass: !Ref DatabaseInstanceType
      DBSubnetGroupName: !Ref DataSubnetGroup
      Engine: !Ref DatabaseEngine
      #add new config 07/09/2023
      DBParameterGroupName: custom-mysql-aurora3-instance
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Moodle / ', !Ref 'AWS::StackName' ] ]
  DatabaseInstance1:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      DBClusterIdentifier: !Ref DatabaseCluster
      DBInstanceClass: !Ref DatabaseInstanceType
      DBSubnetGroupName: !Ref DataSubnetGroup
      Engine: !Ref DatabaseEngine
      #add new config 07/09/2023
      DBParameterGroupName: custom-mysql-aurora3-instance
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Moodle / ', !Ref 'AWS::StackName' ] ]
  DataSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS Database Subnet Group for Moodle
      SubnetIds:
        !If
          [ NumberOfSubnets1,
          [ !Select [ 0, !Ref Subnet ] ],
          !If
            [ NumberOfSubnets2,
            [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ] ],
            !If
              [ NumberOfSubnets3,
              [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ] ],
              !If
                [ NumberOfSubnets4,
                [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ], !Select [ 3, !Ref Subnet ] ],
                !If
                  [ NumberOfSubnets5,
                  [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ], !Select [ 3, !Ref Subnet ], !Select [ 4, !Ref Subnet ] ],
                  [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ], !Select [ 3, !Ref Subnet ], !Select [ 4, !Ref Subnet ], !Select [ 5, !Ref Subnet ] ]
                  ]
                ]
              ]
            ]
          ]
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Moodle / ', !Ref 'AWS::StackName' ] ]

Outputs:
  DatabaseCluster:
    Value: !Ref DatabaseCluster
  DatabaseName:
    Value: !Ref DatabaseName
  DatabaseInstance0:
    Value: !Ref DatabaseInstance0
  DatabaseInstance1:
    Value: !Ref DatabaseInstance1
  DataSubnetGroup:
    Value: !Ref DataSubnetGroup
  DatabaseClusterEndpointAddress:
    Value: !GetAtt DatabaseCluster.Endpoint.Address
  

